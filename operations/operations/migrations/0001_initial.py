# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-04-29 13:32
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lib.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperationsUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=50, null=True)),
                ('signature', models.FileField(blank=True, null=True, upload_to=b'uploads/accounts')),
                ('regional_staff', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('address_type', models.CharField(choices=[(b'postal', b'Postal'), (b'residential', b'Residential'), (b'business', b'Business'), (b'residential', b'Residential'), (b'pobox', b'POBox')], db_index=True, max_length=50)),
                ('address_line_1', models.CharField(max_length=255, verbose_name=b'Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Address Line 2')),
                ('suburb', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Postal Code')),
                ('city', models.CharField(db_index=True, max_length=255)),
                ('province', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(default=b'South Africa', max_length=255)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('number', models.CharField(db_index=True, max_length=255, unique=True)),
                ('category', models.CharField(choices=[(b'fleet management', b'Fleet Management'), (b'inventory', b'Inventory'), (b'property and facilities', b'Property & Facilities'), (b'offices', b'Offices')], db_index=True, default=b'new', max_length=50)),
                ('subject', models.CharField(db_index=True, max_length=255)),
                ('status', models.CharField(choices=[(b'new', b'New'), (b'pending', b'Pending'), (b'closed', b'Closed')], db_index=True, default=b'new', max_length=50)),
                ('description', models.TextField()),
                ('is_closed', models.BooleanField(default=False)),
                ('created_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseticket_creator', to=settings.AUTH_USER_MODEL)),
                ('employee', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='employees.Employee')),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('office_type', models.CharField(blank=True, choices=[(b'Head Office', b'Head Office'), (b'Regional', b'Regional'), (b'Satelite', b'Satelite')], db_index=True, default=b'new', max_length=50, null=True)),
                ('address', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_address', to='operations.Address')),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('first_name', models.CharField(max_length=255, verbose_name=b'Contact First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Contact Last Name')),
                ('tel_number', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Telephone Number')),
                ('tel_number_2', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Telephone Number 2')),
                ('tel_number_3', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Telephone Number 3')),
                ('cell_number', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name=b'Cell Number')),
                ('email', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('document_name', models.CharField(db_index=True, max_length=255)),
                ('document', models.FileField(blank=True, null=True, upload_to=b'uploads/documents')),
                ('image', models.ImageField(blank=True, null=True, upload_to=b'uploads/images')),
                ('file_type', models.CharField(choices=[(b'document', b'Document'), (b'photo', b'Photo')], db_index=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Insurer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name=b'Insurer Name')),
                ('address', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='insurer_address', to='operations.Address')),
                ('contact_person', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='insurer_contact', to='operations.Contact')),
                ('created_by', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_insurer', to=settings.AUTH_USER_MODEL)),
                ('modified_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_insurer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name=b'Service Provider')),
                ('address', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_provider_address', to='operations.Address')),
                ('contact_person', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_provider_contact', to='operations.Contact')),
                ('created_by', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_service_provider', to=settings.AUTH_USER_MODEL)),
                ('modified_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_service_provider', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketEscalation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('reason', models.TextField()),
                ('created_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('from_user', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='escalate_from_user', to=settings.AUTH_USER_MODEL)),
                ('ticket', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, to='operations.BaseTicket')),
                ('to_user', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='escalate_to_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketFixOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name=b'Vendor')),
                ('vendor_type', models.CharField(choices=[(b'branding', b'Branding'), (b'dealer', b'Dealer'), (b'fuel card supplier', b'Fuel Card Supplier'), (b'installer', b'Installer'), (b'insurance', b'Insurance'), (b'service provider', b'Service Provider'), (b'tracker', b'Tracker')], db_index=True, max_length=50, verbose_name=b'Vendor Type')),
                ('account_type', models.CharField(blank=True, choices=[(b'cash', b'Cash'), (b'credit', b'Credit'), (b'debit', b'Debit')], max_length=50, null=True, verbose_name=b'Account Type')),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('address', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_address', to='operations.Address')),
                ('contact_person', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_contact', to='operations.Contact')),
                ('created_by', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_vendor', to=settings.AUTH_USER_MODEL)),
                ('modified_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_vendor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorBankDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('changed_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.BooleanField(db_index=True, default=False)),
                ('bank_name', models.CharField(choices=[(b'', b'Please select'), (b'ABSA', b'ABSA'), (b'AFRICAN', b'AFRICAN'), (b'ALBARAKA', b'ALBARAKA'), (b'ATHENS', b'ATHENS'), (b'BIDVEST', b'BIDVEST'), (b'BOE', b'BOE'), (b'CAPITEC', b'CAPITEC'), (b'CITI', b'CITI'), (b'FBC', b'FBC'), (b'FINBOND', b'FINBOND'), (b'FNB', b'FNB'), (b'FNBBOTS', b'FNBBOTS'), (b'FNBLES', b'FNBLES'), (b'FNBNAM', b'FNBNAM'), (b'FNBSWAZ', b'FNBSWAZ'), (b'FNBTRANS', b'FNBTRANS'), (b'GRINDROD', b'GRINDROD'), (b'HABIB', b'HABIB'), (b'HBZ', b'HBZ'), (b'HSBC', b'HSBC'), (b'INDIA', b'INDIA'), (b'INVESTEC', b'INVESTEC'), (b'ITHALA', b'ITHALA'), (b'JPMORGAN', b'JPMORGAN'), (b'MERCANT', b'MERCANT'), (b'MTN', b'MTN'), (b'NBS', b'NBS'), (b'NEDBANK', b'NEDBANK'), (b'NEDBOND', b'NEDBOND'), (b'NEDLES', b'NEDLES'), (b'NEDNAM', b'NEDNAM'), (b'NEDSWAZ', b'NEDSWAZ'), (b'OLYMPUS', b'OLYMPUS'), (b'PARIBAS', b'PARIBAS'), (b'PEOP CUR', b'PEOP CUR'), (b'PEOPLES', b'PEOPLES'), (b'PEP', b'PEP'), (b'POST', b'POST'), (b'ROYALSCO', b'ROYALSCO'), (b'SASFIN', b'SASFIN'), (b'STANCHAR', b'STANCHAR'), (b'STANDARD', b'STANDARD'), (b'STANNAM', b'STANNAM'), (b'STANSWAZ', b'STANSWAZ'), (b'STD LES', b'STD LES'), (b'UBANK', b'UBANK'), (b'UNIBANK', b'UNIBANK'), (b'VBSMut', b'VBSMut'), (b'WINDHOEK', b'WINDHOEK')], db_index=True, max_length=255, verbose_name=b'Bank Name')),
                ('branch_code', models.CharField(blank=True, max_length=50, null=True, verbose_name=b'Branch Code')),
                ('account_holder_name', models.CharField(blank=True, max_length=250, null=True, verbose_name=b'Account Holder Name')),
                ('account_number', models.CharField(max_length=50, unique=True, verbose_name=b'Account Number')),
                ('created_by', lib.fields.ProtectedForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_service_provider_bank', to=settings.AUTH_USER_MODEL)),
                ('modified_by', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='modified_service_provider_bank', to=settings.AUTH_USER_MODEL)),
                ('vendor', lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_bank_details', to='operations.Vendor')),
            ],
            options={
                'default_permissions': [],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='contact_person',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_contact', to='operations.Contact'),
        ),
        migrations.AddField(
            model_name='branch',
            name='region',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_region', to='operations.Region'),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='possible_fix',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='operations.TicketFixOption'),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='technician',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='baseticket_technician', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='operationsuser',
            name='district',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_district', to='operations.Branch'),
        ),
        migrations.AddField(
            model_name='operationsuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='operationsuser',
            name='region',
            field=lib.fields.ProtectedForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_region', to='operations.Region'),
        ),
        migrations.AddField(
            model_name='operationsuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
